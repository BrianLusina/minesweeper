module.exports = {
  roots: ['<rootDir>/src'],
  testEnvironment: 'jsdom',
  testRunner: '<rootDir>/node_modules/jest-circus/runner.js',
  collectCoverageFrom: ['src/**/*.{js,jsx,mjs,ts,tsx}', '!src/**/*.d.ts'],
  coveragePathIgnorePatterns: [
    '/node_modules/',
    '<rootDir>/src/registerServiceWorker.ts',
    '<rootDir>/src/react-app-env.d.ts',
    '<rootDir>/src/window.d.ts',
  ],
  setupFiles: ['react-app-polyfill/jsdom'],
  setupFilesAfterEnv: ['<rootDir>/scripts/ts/setupTests.ts'],
  testMatch: [
    '<rootDir>/src/**/?(*.)(spec|test).{js,jsx,mjs}',
    '<rootDir>/__tests__/**/*.{js,ts,tsx,jsx,mjs}',
    '<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}',
    '<rootDir>/?(*.)(spec|test).{js,jsx,ts,tsx,mjs}',
    '<rootDir>/src/**/*.{spec,test}.{js,jsx,ts,tsx}',
    '<rootDir>/src/**/__tests__/**/*.{js,ts,tsx,jsx,mjs}',
    '<rootDir>/src/**/?(*.)(spec|test).{js,ts,tsx,jsx,mjs}',
    '<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}',
    '<rootDir>/src/**/*.{spec,test}.{js,jsx,ts,tsx}',
  ],
  testURL: 'http://localhost',
  transform: {
    '^(?!.*\\.(js|jsx|mjs|css|json)$)': '<rootDir>/config/jest/fileTransform.js',
    '^.+\\.(js|jsx|mjs|cjs|ts|tsx)$': '<rootDir>/config/jest/babelTransform.js',
    '^.+\\.css$': '<rootDir>/config/jest/cssTransform.js',
    '^(?!.*\\.(js|jsx|mjs|cjs|ts|tsx|css|json)$)': '<rootDir>/config/jest/fileTransform.js',
  },
  transformIgnorePatterns: [
    '[/\\\\]node_modules[/\\\\].+\\.(js|jsx|mjs|cjs|ts|tsx)$',
    '^.+\\.module\\.(css|sass|scss)$',
  ],
  modulePaths: [],
  moduleNameMapper: {
    '^react-native$': 'react-native-web',
    '^.+\\.module\\.(css|sass|scss)$': 'identity-obj-proxy',
    '^@assets/(.*)$': '<rootDir>/src/assets/$1',
    '^@images/(.*)$': '<rootDir>/src/assets/images/$1',
    '^@icons/(.*)$': '<rootDir>/src/assets/icons/$1',
    '^@fonts/(.*)$': '<rootDir>/src/assets/fonts/$1',
    '^@config': '<rootDir>/src/config/config.ts',
    '^@apiConfig': '<rootDir>/src/config/api.ts',
    '^@metricsConfig': '<rootDir>/src/config/metrics.ts',
    '^@analyticsConfig': '<rootDir>/src/config/analytics.ts',
    '^@routesConfig': '<rootDir>/src/config/routes.ts',
    '^@styles/(.*)$': '<rootDir>/src/styles/$1',
    '^@scss/(.*)$': '<rootDir>/src/styles/scss/$1',
    '^@css/(.*)$': '<rootDir>/src/styles/css/$1',
    '^@libs/(.*)$': '<rootDir>/src/libs/$1',
    '^@i18n/(.*)$': '<rootDir>/src/libs/i18n/$1',
    '^@hooks/(.*)$': '<rootDir>/src/libs/hooks/$1',
    '^@services/(.*)$': '<rootDir>/src/libs/services/$1',
    '^@storage/(.*)$': '<rootDir>/src/libs/services/storage/$1',
    '^@cookie': '<rootDir>/src/libs/services/storage/cookie/cookie.ts',
    '^@cache': '<rootDir>/src/libs/services/storage/cache/cache.ts',
    '^@localStorage': '<rootDir>/src/libs/services/storage/local/local.ts',
    '^@sessionStorage': '<rootDir>/src/libs/services/storage/session/session.ts',
    '^@logger': '<rootDir>/src/libs/services/logger/index.ts',
    '^@analytics': '<rootDir>/src/libs/services/analytics/index.ts',
    '^@monitoring': '<rootDir>/src/libs/services/monitoring/index.ts',
    '^@store': '<rootDir>/src/libs/redux/index.ts',
    '^@components/(.*)$': '<rootDir>/src/components/$1',
    '^@ui/(.*)$': '<rootDir>/src/components/ui/$1',
    '^@layouts/(.*)$': '<rootDir>/src/components/layouts/$1',
    '^@sections/(.*)$': '<rootDir>/src/components/sections/$1',
    '^@pageUi/(.*)$': '<rootDir>/src/components/pages/$1',
    '^@containers/(.*)$': '<rootDir>/src/components/containers/$1',
    '^@context/(.*)$': '<rootDir>/src/components/context/$1',
    '^@authContext': '<rootDir>/src/components/context/Auth/index.ts',
    '^@themeContext': '<rootDir>/src/components/context/Themes/index.ts',
    '^@translationContext': '<rootDir>/src/components/context/Translation/index.ts',
    '^@routes/(.*)$': '<rootDir>/src/routes/$1',
    '^@appRoutes': '<rootDir>/src/routes/index.tsx',
    '^@utils': '<rootDir>/src/utils/utils.ts',
    '^@meta/(.*)$': '<rootDir>/src/utils/meta/$1',
    '^@timeUtils': '<rootDir>/src/utils/time/timeUtils.ts',
    '^@timeConstants': '<rootDir>/src/utils/time/constants.ts',
    '^@domUtils': '<rootDir>/src/utils/dom/domUtils.ts',
    '^@jwtUtils': '<rootDir>/src/utils/jwt/jwtUtils.ts',
    '^@fileUtils': '<rootDir>/src/utils/files/fileUtils.ts',
    '^@log': '<rootDir>/src/utils/log/index.ts',
    '^@pages/(.*)$': '<rootDir>/src/pages/$1',
    '^@screens/(.*)$': '<rootDir>/src/screens/$1',
    '^@constants': '<rootDir>/src/utils/constants.ts',
    '^@hoc/(.*)$': '<rootDir>/src/hocs/$1',
    '^@notification': '<rootDir>/src/components/containers/notification/notify.ts',
  },
  moduleFileExtensions: [
    'web.js',
    'web.ts',
    'js',
    'ts',
    'json',
    'web.jsx',
    'web.tsx',
    'jsx',
    'tsx',
    'node',
    'mjs',
  ],
  watchPlugins: ['jest-watch-typeahead/filename', 'jest-watch-typeahead/testname'],
  resetMocks: true,
};
